// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/api (interfaces: HTTPDoer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHTTPDoer is a mock of HTTPDoer interface.
type MockHTTPDoer struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPDoerMockRecorder
}

// MockHTTPDoerMockRecorder is the mock recorder for MockHTTPDoer.
type MockHTTPDoerMockRecorder struct {
	mock *MockHTTPDoer
}

// NewMockHTTPDoer creates a new mock instance.
func NewMockHTTPDoer(ctrl *gomock.Controller) *MockHTTPDoer {
	mock := &MockHTTPDoer{ctrl: ctrl}
	mock.recorder = &MockHTTPDoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPDoer) EXPECT() *MockHTTPDoerMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockHTTPDoer) Do(arg0 context.Context, arg1 *http.Request, arg2 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *MockHTTPDoerMockRecorder) Do(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockHTTPDoer)(nil).Do), arg0, arg1, arg2)
}
